// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/network/consensus/pbft/pbft.proto

package pbft

import (
	block "github.com/andantan/modular-blockchain/proto/core/block"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PbftPrePrepareMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	View          uint64                 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Block         *block.Block           `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Digest        []byte                 `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
	Signature     []byte                 `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbftPrePrepareMessage) Reset() {
	*x = PbftPrePrepareMessage{}
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftPrePrepareMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftPrePrepareMessage) ProtoMessage() {}

func (x *PbftPrePrepareMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftPrePrepareMessage.ProtoReflect.Descriptor instead.
func (*PbftPrePrepareMessage) Descriptor() ([]byte, []int) {
	return file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP(), []int{0}
}

func (x *PbftPrePrepareMessage) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PbftPrePrepareMessage) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PbftPrePrepareMessage) GetBlock() *block.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *PbftPrePrepareMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbftPrePrepareMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PbftPrePrepareMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PbftPrepareMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	View          uint64                 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Digest        []byte                 `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature     []byte                 `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbftPrepareMessage) Reset() {
	*x = PbftPrepareMessage{}
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftPrepareMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftPrepareMessage) ProtoMessage() {}

func (x *PbftPrepareMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftPrepareMessage.ProtoReflect.Descriptor instead.
func (*PbftPrepareMessage) Descriptor() ([]byte, []int) {
	return file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP(), []int{1}
}

func (x *PbftPrepareMessage) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PbftPrepareMessage) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PbftPrepareMessage) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PbftPrepareMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PbftPrepareMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbftPrepareMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PbftCommitMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	View          uint64                 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Digest        []byte                 `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature     []byte                 `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbftCommitMessage) Reset() {
	*x = PbftCommitMessage{}
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftCommitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftCommitMessage) ProtoMessage() {}

func (x *PbftCommitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftCommitMessage.ProtoReflect.Descriptor instead.
func (*PbftCommitMessage) Descriptor() ([]byte, []int) {
	return file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP(), []int{2}
}

func (x *PbftCommitMessage) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PbftCommitMessage) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PbftCommitMessage) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PbftCommitMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PbftCommitMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbftCommitMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PbftViewChangeMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewView       uint64                 `protobuf:"varint,1,opt,name=new_view,json=newView,proto3" json:"new_view,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Digest        []byte                 `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbftViewChangeMessage) Reset() {
	*x = PbftViewChangeMessage{}
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftViewChangeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftViewChangeMessage) ProtoMessage() {}

func (x *PbftViewChangeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftViewChangeMessage.ProtoReflect.Descriptor instead.
func (*PbftViewChangeMessage) Descriptor() ([]byte, []int) {
	return file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP(), []int{3}
}

func (x *PbftViewChangeMessage) GetNewView() uint64 {
	if x != nil {
		return x.NewView
	}
	return 0
}

func (x *PbftViewChangeMessage) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PbftViewChangeMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PbftViewChangeMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbftViewChangeMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PbftNewViewMessage struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	NewView            uint64                   `protobuf:"varint,1,opt,name=new_view,json=newView,proto3" json:"new_view,omitempty"`
	Sequence           uint64                   `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	ViewChangeMessages []*PbftViewChangeMessage `protobuf:"bytes,3,rep,name=view_change_messages,json=viewChangeMessages,proto3" json:"view_change_messages,omitempty"`
	PrePrepareMessage  *PbftPrePrepareMessage   `protobuf:"bytes,4,opt,name=pre_prepare_message,json=prePrepareMessage,proto3" json:"pre_prepare_message,omitempty"`
	Digest             []byte                   `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
	PublicKey          []byte                   `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature          []byte                   `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PbftNewViewMessage) Reset() {
	*x = PbftNewViewMessage{}
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftNewViewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftNewViewMessage) ProtoMessage() {}

func (x *PbftNewViewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_network_consensus_pbft_pbft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftNewViewMessage.ProtoReflect.Descriptor instead.
func (*PbftNewViewMessage) Descriptor() ([]byte, []int) {
	return file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP(), []int{4}
}

func (x *PbftNewViewMessage) GetNewView() uint64 {
	if x != nil {
		return x.NewView
	}
	return 0
}

func (x *PbftNewViewMessage) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PbftNewViewMessage) GetViewChangeMessages() []*PbftViewChangeMessage {
	if x != nil {
		return x.ViewChangeMessages
	}
	return nil
}

func (x *PbftNewViewMessage) GetPrePrepareMessage() *PbftPrePrepareMessage {
	if x != nil {
		return x.PrePrepareMessage
	}
	return nil
}

func (x *PbftNewViewMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PbftNewViewMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbftNewViewMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_proto_network_consensus_pbft_pbft_proto protoreflect.FileDescriptor

const file_proto_network_consensus_pbft_pbft_proto_rawDesc = "" +
	"\n" +
	"'proto/network/consensus/pbft/pbft.proto\x12\x04pbft\x1a\x1cproto/core/block/block.proto\"\xc0\x01\n" +
	"\x15PbftPrePrepareMessage\x12\x12\n" +
	"\x04view\x18\x01 \x01(\x04R\x04view\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\"\n" +
	"\x05block\x18\x03 \x01(\v2\f.block.BlockR\x05block\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\fR\tpublicKey\x12\x16\n" +
	"\x06digest\x18\x05 \x01(\fR\x06digest\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignature\"\xb8\x01\n" +
	"\x12PbftPrepareMessage\x12\x12\n" +
	"\x04view\x18\x01 \x01(\x04R\x04view\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x03 \x01(\fR\tblockHash\x12\x16\n" +
	"\x06digest\x18\x04 \x01(\fR\x06digest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x05 \x01(\fR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignature\"\xb7\x01\n" +
	"\x11PbftCommitMessage\x12\x12\n" +
	"\x04view\x18\x01 \x01(\x04R\x04view\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x03 \x01(\fR\tblockHash\x12\x16\n" +
	"\x06digest\x18\x04 \x01(\fR\x06digest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x05 \x01(\fR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignature\"\xa3\x01\n" +
	"\x15PbftViewChangeMessage\x12\x19\n" +
	"\bnew_view\x18\x01 \x01(\x04R\anewView\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x16\n" +
	"\x06digest\x18\x03 \x01(\fR\x06digest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\fR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"\xbc\x02\n" +
	"\x12PbftNewViewMessage\x12\x19\n" +
	"\bnew_view\x18\x01 \x01(\x04R\anewView\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12M\n" +
	"\x14view_change_messages\x18\x03 \x03(\v2\x1b.pbft.PbftViewChangeMessageR\x12viewChangeMessages\x12K\n" +
	"\x13pre_prepare_message\x18\x04 \x01(\v2\x1b.pbft.PbftPrePrepareMessageR\x11prePrepareMessage\x12\x16\n" +
	"\x06digest\x18\x05 \x01(\fR\x06digest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x06 \x01(\fR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\a \x01(\fR\tsignatureBVZTgithub.com/andantan/p2p-pbft-modular-blockchain-network/proto/network/consensus/pbftb\x06proto3"

var (
	file_proto_network_consensus_pbft_pbft_proto_rawDescOnce sync.Once
	file_proto_network_consensus_pbft_pbft_proto_rawDescData []byte
)

func file_proto_network_consensus_pbft_pbft_proto_rawDescGZIP() []byte {
	file_proto_network_consensus_pbft_pbft_proto_rawDescOnce.Do(func() {
		file_proto_network_consensus_pbft_pbft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_network_consensus_pbft_pbft_proto_rawDesc), len(file_proto_network_consensus_pbft_pbft_proto_rawDesc)))
	})
	return file_proto_network_consensus_pbft_pbft_proto_rawDescData
}

var file_proto_network_consensus_pbft_pbft_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_network_consensus_pbft_pbft_proto_goTypes = []any{
	(*PbftPrePrepareMessage)(nil), // 0: pbft.PbftPrePrepareMessage
	(*PbftPrepareMessage)(nil),    // 1: pbft.PbftPrepareMessage
	(*PbftCommitMessage)(nil),     // 2: pbft.PbftCommitMessage
	(*PbftViewChangeMessage)(nil), // 3: pbft.PbftViewChangeMessage
	(*PbftNewViewMessage)(nil),    // 4: pbft.PbftNewViewMessage
	(*block.Block)(nil),           // 5: block.Block
}
var file_proto_network_consensus_pbft_pbft_proto_depIdxs = []int32{
	5, // 0: pbft.PbftPrePrepareMessage.block:type_name -> block.Block
	3, // 1: pbft.PbftNewViewMessage.view_change_messages:type_name -> pbft.PbftViewChangeMessage
	0, // 2: pbft.PbftNewViewMessage.pre_prepare_message:type_name -> pbft.PbftPrePrepareMessage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_network_consensus_pbft_pbft_proto_init() }
func file_proto_network_consensus_pbft_pbft_proto_init() {
	if File_proto_network_consensus_pbft_pbft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_network_consensus_pbft_pbft_proto_rawDesc), len(file_proto_network_consensus_pbft_pbft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_network_consensus_pbft_pbft_proto_goTypes,
		DependencyIndexes: file_proto_network_consensus_pbft_pbft_proto_depIdxs,
		MessageInfos:      file_proto_network_consensus_pbft_pbft_proto_msgTypes,
	}.Build()
	File_proto_network_consensus_pbft_pbft_proto = out.File
	file_proto_network_consensus_pbft_pbft_proto_goTypes = nil
	file_proto_network_consensus_pbft_pbft_proto_depIdxs = nil
}
